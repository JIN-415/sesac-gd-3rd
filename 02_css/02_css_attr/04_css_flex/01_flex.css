body {
  margin: 0;
  padding: 0;
}

.container {
  width: 100vw;
  background-color: blanchedalmond;
  /* display: flex;는 자식 요소의 정렬 방법을 지정하는 속성 */
  /* display: inline-flex;도 있음 */
  /* flex와 inline-flex의 차이 */
  /* flex는 컨테이너가 수직으로 쌓이고(=block) inline-flex는 수평 방향으로 정렬(=inline) */

  /* display: flex;는 기본적으로 자식 요소들이 왼쪽->오른쪽으로 쌓임 */
  /* 즉, 주축의 기본 방향이 좌->우 */
  /* 주축 : main aixs */
  /* 교차축 : cross aixs */

  display: flex;
  /* flex-direction : 주측의 방향 지정 / 시작점 변경 */
  /* flex-direction : row; (default) */
  /* flex-direction: row-reverse; 우->좌로 자식 요소들이 쌓임 */
  flex-direction: row-reverse;
  /* flex-direction: column; : 위->아래로 자식 요소들이 쌓임 */
  flex-direction: column;
  flex-direction: column-reverse;

  flex-direction: row;
  width: 350px;
  height: 300px;

  /* flex 속성 사용 시 컨테이너의 너비가 아이템들의 너비보다 작을 떄 줄바꿈을 지정 */
  /* flex-wrap : nowrap | wrap | wrap-reverse
  flex 속성 사용 시 컨테이너의 줄바꿈 지정 */
  /* flex-wrap: nowrap; (default) */
  flex-wrap: wrap;
  flex-wrap: wrap-reverse;

  /* default 값으로 변경 */
  flex-direction: row;
  flex-wrap: nowrap;
  width: 100vw;
  height: auto;

  /* 
    justify-content : 주축 item의 정렬(배치) 방법  
    justify-content: flex-start; (default) -> 아이템을 start 지점을 기준으로 나열 
    justify-content: flex-end; -> 아이템을 end 지점을 기준으로 나열 
    justify-content: space-around; -> 아이템들의 모든 여백을 동일하게 갖도록 함 (양끝 여백의 단위가 1이라면, 아이템 사이의 여백은 2) 
    justify-content: space-evenly; -> start부터 첫 아이템의 간격, 아이템 사이 간격, 마지막 아이템부터 end까지의 모든 간격이 동일
    justify-content: space-between; -> 처음과 마지막 아이템을 양 끝에 붙이고 나머지 아이템 사이의 간격을 동일하게 나눔 
  */
  justify-content: end;
  justify-content: space-around;
  justify-content: space-evenly;

  /* default */
  justify-content: flex-start;

  /* align-items -> 교차축에 대해 item을 어떻게 배치할 것인가 */
  /* 
    align-items : stretch; (default) -> container의 교차축을 모두 채우기 위해 늘림
        -> 아이템의 높이/넓이가 지정되지 않았을 때 자동으로 교차축을 채우기 위해 늘어남
    align-items : flex-start; -> 교차축의 시작점으로 정렬
        -> 아이템의 높이/너비가 지정되었을 때 자동으로 정렬됨
    align-items: flex-end; -> 교차축의 끝점으로 정렬
    align-items: center; -> 교차축의 중앙에 정렬
    align-items: baseline; -> 아이템을 텍스트의 베이스라인 기준으로 정렬
  */
  height: 300px;
  align-items: stretch;

  /* align-content ->  두 줄 이상에서 교차축 기준으로 아이템들의 정렬 방식*/
  /* 조건 : flex-wrap: wrap; 상태에서 아이템이 2줄 이상일 때 교차축 방향을 설정 */
  /* 
    align-content : stretch; (default) -> 교차축 방향으로 모두 차지하기 위해 늘어남
    align-content : flex-start; -> 교차축 방향에서 시작점으로 정렬
    align-content : flex-end; -> 교차축 방향에서 끝점으로 정렬
    align-content : center; -> 교차축 방향에서 가운데 정렬
    align-content : space-between 
    align-content : space-around 
  */
  width: 350px;
  flex-wrap: wrap;
  align-content: flex-start;

  /* flex-grow */
}

.container .item {
  width: 100px;
  height: 100px;
  font-size: 30px;
  text-align: center;
  line-height: 100px;
}

.container .item1 {
  background-color: crimson;
  /* font-size: 20px; */
}
.container .item2 {
  background-color: rgb(255, 112, 50);
  /* font-size: 40px; */
}
.container .item3 {
  background-color: gold;
}
.container .item4 {
  background-color: limegreen;
}
.container .item5 {
  background-color: dodgerblue;
}

/* item 속성 */
.item-container {
  margin: 10px;
  background-color: aliceblue;
  width: 100%;
  height: 200px;
  display: flex;
  align-items: center;
}

.item-container .item {
  /* width: 50px; */
  height: 50px;
}

.item-container .item1 {
  background-color: lightcoral;
  order: 5;
}
.item-container .item2 {
  background-color: lightsalmon;
  align-self: flex-start;
}
.item-container .item3 {
  background-color: lightyellow;
  /* flex-basis: 100px; */
  width: 500px;
  /* flex-basis: 200px; */
}
.item-container .item4 {
  background-color: lightgreen;
  order: 4;
  flex-grow: 1;
  /* 나머지 item 1,2,3을 제외한 너비에서 1/3을 가져감 */
}
.item-container .item5 {
  background-color: lightblue;
  order: 1;
  flex-grow: 2;
  /* 나머지 item 1,2,3을 제외한 너비에서 2/3을 가져감 */
}
